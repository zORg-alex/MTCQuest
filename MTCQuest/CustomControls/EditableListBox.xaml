<ListBox x:Name="listBox" x:Class="MTCQuest.CustomControls.EditableListBox"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
         xmlns:local="clr-namespace:MTCQuest"
         xmlns:zq="clr-namespace:MTCQuest.ViewModel.zQuest;assembly=MTCQuest.ViewModel"
         xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
         xmlns:c="clr-namespace:MTCQuest.CustomControls"
         xmlns:e="clr-namespace:EffectLibrary;assembly=EffectLibrary"
         xmlns:cnv="clr-namespace:MTCQuest.Converters"
         mc:Ignorable="d"
         d:DesignHeight="300" d:DesignWidth="300"
         Style="{DynamicResource EditableListBoxStyle}"
         ItemContainerStyle="{DynamicResource EditableListBoxItemStyle}" d:DataContext="{DynamicResource TestTheme}" ItemsSource="{Binding Questions}">
    <ListBox.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Themes/Theme.xaml"/>
                <ResourceDictionary Source="../Resources/QuestSpacificControlStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <c:BindingExists x:Key="BindingExists"/>
            <cnv:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter"/>
            <zq:Theme x:Key="TestTheme">
                <zq:Theme.Questions>
                    <zq:Question IsEdited="True" IsSelected="True" Text="Some Question" Color="#FF2E00FF"/>
                    <zq:Question Text="Another Question"/>
                </zq:Theme.Questions>
            </zq:Theme>

            <Style x:Key="EditableListBoxStyle" TargetType="{x:Type ListBox}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{StaticResource Pallete.Divider}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{StaticResource Pallete.PrimaryText}"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="True"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="ItemsPanel" Value="{DynamicResource OrientedItemsPanelTemplate}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <ScrollViewer Background="{TemplateBinding Background}"  SnapsToDevicePixels="true" Focusable="false" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <StackPanel Orientation="{Binding Orientation, ElementName=listBox}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <c:zButton x:Name="AddButton" Command="{Binding AddItem, RelativeSource={RelativeSource TemplatedParent}}"
            							HorizontalContentAlignment="Left"
            							Background="Transparent" Foreground="{DynamicResource Pallete.PrimaryText}"
            							BorderThickness="0">
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Rectangle Width="16" Height="16" Margin="5,0"
            									Fill="{DynamicResource Pallete.Accent}"
            									OpacityMask="{DynamicResource Icon_PlusSign}"/>
                                            <TextBlock Text="Add" Foreground="{StaticResource Pallete.PrimaryText}"/>
                                        </StackPanel>
                                    </c:zButton>
                                </StackPanel>
                            </ScrollViewer>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="AddButton" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <e:DesaturateEffect DesaturationFactor=".25"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="true"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="EditableListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Margin" Value="5,0"/>
                <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
            					BorderThickness="{TemplateBinding BorderThickness}"
            					Background="{TemplateBinding Background}"
            					Padding="{TemplateBinding Padding}"
            					SnapsToDevicePixels="True">
                                <Grid Height="33" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox x:Name="TB" Text="{Binding Text}"
            							VerticalContentAlignment="Center"
            							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
            							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
            							Padding="5, 0" BorderThickness="0"
            							Visibility="Collapsed"/>
                                    <Label x:Name="Lb" Content="{Binding Text}"
            							VerticalContentAlignment="Center"
            							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
            							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
            							Padding="5, 0" BorderThickness="0" Margin="2,1,0,0" />
                                    <xctk:ColorPicker x:Name="CB" Grid.Column="1" Width="48" Visibility="Collapsed"
                                                      SelectedColor="{Binding Color}"
                                                      ShowRecentColors="True" ShowDropDownButton="False" ShowStandardColors="False"/>
                                    <c:zButton x:Name="DB" OpacityMask="{DynamicResource Icon_MinusSign}"
                                                  Command="{Binding RemoveThis}"
                                                  Width="16" Height="16" Background="#FFD12929" BorderThickness="0"
                                                  Visibility="Collapsed" Margin="2" Grid.Column="2"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="#1F26A0DA"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="#A826A0DA"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="#3DDADADA"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="#FFDADADA"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="#3D26A0DA"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" TargetName="Lb" Value="Collapsed"/>
                                    <Setter Property="Visibility" TargetName="TB" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="DB" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="CB" Value="Visible"/>
                                </MultiTrigger>
                                <DataTrigger Binding="{Binding Color, Converter={StaticResource BindingExists}, FallbackValue=false}" Value="false">
                                    <Setter Property="Visibility" TargetName="CB" Value="Collapsed"/>
                                </DataTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ItemsPanelTemplate x:Key="OrientedItemsPanelTemplate">
                <VirtualizingStackPanel IsItemsHost="True"
            		Orientation="{Binding Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type c:EditableListBox}}}"/>
            </ItemsPanelTemplate>

        </ResourceDictionary>
    </ListBox.Resources>
</ListBox>
