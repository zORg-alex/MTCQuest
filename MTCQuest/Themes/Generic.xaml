<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:MTCQuest"
    xmlns:c="clr-namespace:MTCQuest.CustomControls"
    xmlns:e="clr-namespace:EffectLibrary;assembly=EffectLibrary"
    xmlns:cnv="clr-namespace:MTCQuest.Converters">
    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="../Themes/Theme.xaml"/>-->
        <ResourceDictionary Source="../Resources/Icons.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--<cnv:PathToDrawingBrushConverter x:Key="PathToDrawingBrushConverter"/>
    <cnv:BrushOpacityConverter x:Key="BrushOpacityConverter"/>
    <cnv:BrushOverlayConverter x:Key="BrushOverlayConverter"/>
    <cnv:SolidColorBrushToColorConverter x:Key="SolidColorBrushToColorConverter"/>
    <s:UVMCommandHostToUVMCommandConverter x:Key="UVMCommandHostToUVMCommandConverter"/>-->
    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />

    <!-- http://paletton.com/#uid=c3x0I1b0f0klllz2zTZc3uWuFcbTj2v -->

    <SolidColorBrush x:Key="Pallete.Primary" Color="#2A516E"/>
    <SolidColorBrush x:Key="Pallete.Primary.Darker" Color="#07263E"/>
    <SolidColorBrush x:Key="Pallete.Primary.Darkest" Color="#00070D"/>
    <SolidColorBrush x:Key="Pallete.Primary.Brighter" Color="#67869F"/>
    <SolidColorBrush x:Key="Pallete.Primary.Brightest" Color="#DAE3EB"/>

    <SolidColorBrush x:Key="Pallete.Complementary" Color="#AC7B39"/>
    <SolidColorBrush x:Key="Pallete.Complementary.Darker" Color="#613904"/>
    <SolidColorBrush x:Key="Pallete.Complementary.Darkest" Color="#140B00"/>
    <SolidColorBrush x:Key="Pallete.Complementary.Brighter" Color="#F6CF9A"/>
    <SolidColorBrush x:Key="Pallete.Complementary.Brightest" Color="#FFF6EB"/>

    <SolidColorBrush x:Key="Pallete.Secondary" Color="#AC8F39"/>
    <SolidColorBrush x:Key="Pallete.Secondary.Darker" Color="#614A04"/>
    <SolidColorBrush x:Key="Pallete.Secondary.Darkest" Color="#140F00"/>
    <SolidColorBrush x:Key="Pallete.Secondary.Brighter" Color="#F6DF9A"/>
    <SolidColorBrush x:Key="Pallete.Secondary.Brightest" Color="#FFFAEB"/>

    <SolidColorBrush x:Key="Pallete.Tretiary" Color="#AC5A39"/>
    <SolidColorBrush x:Key="Pallete.Tretiary.Darker" Color="#611F04"/>
    <SolidColorBrush x:Key="Pallete.Tretiary.Darkest" Color="#140600"/>
    <SolidColorBrush x:Key="Pallete.Tretiary.Brighter" Color="#F6B49A"/>
    <SolidColorBrush x:Key="Pallete.Tretiary.Brightest" Color="#FFF0EB"/>

    <Style x:Key="DefaultZButtonStyle" TargetType="{x:Type c:zButton}">
        <Setter Property="Highlight" Value="#88577697"/>
        <Setter Property="Pressed" Value="#88102E4F"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:zButton}">
                    <Grid>
                        <Border x:Name="Bg" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter x:Name="contentPresenter"
												  ContentTemplate="{TemplateBinding ContentTemplate}"
												  Content="{TemplateBinding Content}"
												  ContentStringFormat="{TemplateBinding ContentStringFormat}"
												  Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Bg" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bg" Property="Effect">
                                <Setter.Value>
                                    <e:OverlayEffect BlendSolidBrush="{Binding Highlight, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bg" Property="Effect">
                                <Setter.Value>
                                    <e:OverlayEffect BlendSolidBrush="{Binding Pressed, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bg" Property="Effect">
                                <Setter.Value>
                                    <e:DesaturateEffect DesaturationFactor=".25"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!--<EventTrigger RoutedEvent="MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:10" Storyboard.TargetProperty="Effect.Blend" To="{Binding Highlight, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource SolidColorBrushToColorConverter}}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>-->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultEmptyZButtonStyle" TargetType="{x:Type c:zButton}" BasedOn="{StaticResource DefaultZButtonStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style TargetType="{x:Type c:zButton}" BasedOn="{StaticResource DefaultZButtonStyle}"/>

    <Style TargetType="{x:Type c:MenuButton}" BasedOn="{StaticResource DefaultZButtonStyle}">
        <Setter Property="ActiveIcon" Value="White"/>
        <Setter Property="IconWidth" Value="16"/>
        <Setter Property="IconHeight" Value="16"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:MenuButton}">
                    <Grid>
                        <Border x:Name="Bg" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="Icon" Fill="{TemplateBinding Foreground}" OpacityMask="{TemplateBinding Icon}" Width="{TemplateBinding IconWidth}" Height="{TemplateBinding IconHeight}" Margin="2,0"/>
                            <Label Content="{TemplateBinding Content}" FontSize="16" FontWeight="Bold"
                                   Visibility="{Binding IsCollapsed, Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                        <!--<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Bg" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDefaulted" Value="True"/>
                                <Condition Property="BorderThickness" Value="0"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Bg" Property="BorderThickness" Value="1"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsToggled" Value="True">
                            <!--<Setter TargetName="Bg" Property="Effect">
                                <Setter.Value>
                                    <e:OverlayEffect BlendSolidBrush="{Binding ActiveIcon, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Setter.Value>
                            </Setter>-->
                            <Setter TargetName="Icon" Property="OpacityMask" Value="{Binding ActiveIcon, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bg" Property="Effect">
                                <Setter.Value>
                                    <e:OverlayEffect BlendSolidBrush="{Binding Highlight, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bg" Property="Effect">
                                <Setter.Value>
                                    <e:OverlayEffect BlendSolidBrush="{Binding Pressed, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bg" Property="Effect">
                                <Setter.Value>
                                    <e:DesaturateEffect DesaturationFactor=".25"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="NullBindingSensitiveTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="#FFABAdB3"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
