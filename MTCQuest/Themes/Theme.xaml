<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:main="clr-namespace:MTCQuest"
                    xmlns:ccon="clr-namespace:MTCQuest.CustomControls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:m="System.Widows.Media.Geometry"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">


    <!-- deep-purple/light-blue Pallete-->
    <SolidColorBrush x:Key="Pallete.Primary" Color="#FF673AB7"/>
    <SolidColorBrush x:Key="Pallete.PrimaryDark" Color="#FF512DA8"/>
    <SolidColorBrush x:Key="Pallete.PrimaryLight" Color="#FFD1C4E9"/>
    <SolidColorBrush x:Key="Pallete.Accent" Color="#FF03A9F4"/>
    <SolidColorBrush x:Key="Pallete.PrimaryText" Color="#FF212121"/>
    <SolidColorBrush x:Key="Pallete.SecondaryText" Color="#FF757575"/>
    <SolidColorBrush x:Key="Pallete.Icons" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="Pallete.Secondary" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="Pallete.Divider" Color="#FFBDBDBD"/>
    <SolidColorBrush x:Key="Pallete.Disabled" Color="#FF808080"/>
    <SolidColorBrush x:Key="Pallete.Highlight.Accent" Color="#8003A9F4"/>
    <SolidColorBrush x:Key="Pallete.Highlight.Primary" Color="#80673AB7"/>
    <SolidColorBrush x:Key="Pallete.Highlight.PrimaryDark" Color="#80512DA8"/>
    <SolidColorBrush x:Key="Pallete.Highlight.PrimaryLight" Color="#80D1C4E9"/>

    <SolidColorBrush x:Key="Style.Static.Background" Color="#FFF1F1F1"/>
    <SolidColorBrush x:Key="Style.Static.Border" Color="#FFD6D6D6"/>
    <SolidColorBrush x:Key="Style.Static.Foreground" Color="Black"/>
    <SolidColorBrush x:Key="Style.Static.Foreground.Light" Color="#FF444444"/>
    <SolidColorBrush x:Key="Style.Disabled.Background" Color="White"/>
    <SolidColorBrush x:Key="Style.Disabled.Border" Color="#FFD8D8D8"/>
    <SolidColorBrush x:Key="Style.Disabled.Foreground" Color="#FF616161"/>
    <SolidColorBrush x:Key="Style.Disabled.Foreground.Light" Color="#FF888888"/>
    <SolidColorBrush x:Key="Style.Active.Background" Color="White"/>
    <SolidColorBrush x:Key="Style.Active.Border" Color="#FFD8D8D8"/>
    <SolidColorBrush x:Key="Style.Active.Foreground" Color="#FF111225"/>
    <SolidColorBrush x:Key="Style.Active.Foreground.Light" Color="#FF333345"/>
	<SolidColorBrush x:Key="Style.Highlight.A" Color="#FF9696FF"/>
	<SolidColorBrush x:Key="Style.Highlight.B" Color="#FFFF9600"/>
	<SolidColorBrush x:Key="Style.Highlight.Border" Color="#FF9E9E9E"/>
	<SolidColorBrush x:Key="Style.Highlight.Border.A" Color="#FF8585DA"/>
	<SolidColorBrush x:Key="Style.Highlight.Border.B" Color="#FFDA8203"/>
	<SolidColorBrush x:Key="Style.Dark.Background" Color="#FFD6D6D6"/>
    <SolidColorBrush x:Key="Style.Dark.Border" Color="#FFBBBBBB"/>
    <SolidColorBrush x:Key="Style.Dark.Foreground" Color="#FF111111"/>
    <SolidColorBrush x:Key="Style.Dark.Foreground.Light" Color="#FF666666"/>
	<SolidColorBrush x:Key="Style.Overlay.Highlight.A" Color="#889696FF"/>
	<SolidColorBrush x:Key="Style.Overlay.Highlight.B" Color="#88FF9600"/>
	<SolidColorBrush x:Key="Style.Overlay.Border" Color="#88838383"/>
	<SolidColorBrush x:Key="Style.Overlay.Border.A" Color="#888585DA"/>
	<SolidColorBrush x:Key="Style.Overlay.Border.B" Color="#88DA8203"/>
	<SolidColorBrush x:Key="Style.Overlay.Pressed" Color="#88464646"/>
    <SolidColorBrush x:Key="Style.Overlay.Disabled" Color="#881F3042"/>
    <Color x:Key="Style.Overlay.Highlight.A.C" A="128" R="128" G="128" B="200"/>
    <Color x:Key="Style.Overlay.Highlight.B.C" A="128" R="128" G="115" B="55"/>
    <Color x:Key="Style.Overlay.Pressed.C"     A="128" R="104" G="104" B="104"/>
    <Color x:Key="Style.Overlay.Disabled.C"    A="128" R="255" G="255" B="255"/>
    <LinearGradientBrush x:Key="Style.UnderConstruction.Gradient"
                         StartPoint="0,0" EndPoint="5,5" MappingMode="Absolute" SpreadMethod="Repeat" Opacity="0.5">
        <GradientStop Color="Black"/>
        <GradientStop Color="Yellow" Offset=".5"/>
        <GradientStop Color="Black" Offset="0.5"/>
        <GradientStop Color="Yellow"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Style.Dark.Background.Gradient" EndPoint="0,1">
        <GradientStop Color="{Binding Color, Source={StaticResource Style.Dark.Background}}" Offset="0"/>
        <GradientStop Color="{Binding Color, Source={StaticResource Style.Dark.Border}}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Style.Static.Background.Gradient" EndPoint="0,1">
        <GradientStop Color="{Binding Color, Source={StaticResource Style.Static.Background}}" Offset="0"/>
        <GradientStop Color="{Binding Color, Source={StaticResource Style.Static.Border}}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Style.Disabled.Background.Gradient" EndPoint="0,1">
        <GradientStop Color="{Binding Color, Source={StaticResource Style.Disabled.Background}}" Offset="0"/>
        <GradientStop Color="{Binding Color, Source={StaticResource Style.Disabled.Border}}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Style.Active.Background.Gradient" EndPoint="0,1">
        <GradientStop Color="{Binding Color, Source={StaticResource Style.Active.Background}}" Offset="0"/>
        <GradientStop Color="{Binding Color, Source={StaticResource Style.Active.Border}}" Offset="1"/>
    </LinearGradientBrush>


    <!-- Search Text Box -->
    <Style x:Key="Search_TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource Style.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Style.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ToolTip" Value="TextPlaceholder"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True" ClipToBounds="True">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Margin="18,2"
                                          VerticalAlignment="Center"/>
                            <Path x:Name="MG" Data="M8,8 a4,4 0 1 1 0.0001 -0.0001 l3,3"
                                      Stroke="#44000000" StrokeThickness="2.5" 
                                      StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                                      HorizontalAlignment="Left" Margin="3,0"
                                      VerticalAlignment="Center">
                                <Path.Effect>
                                    <DropShadowEffect BlurRadius="1" Opacity="0.5" ShadowDepth="1"/>
                                </Path.Effect>
                            </Path>
                            <TextBlock x:Name="TextPlaceholder" Visibility="Collapsed" Text="{TemplateBinding ToolTip}"
                                   VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                   Margin="18,2"
                                   Foreground="{DynamicResource Style.Static.Border}"/>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Style.Active.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Style.Active.Border}"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" TargetName="TextPlaceholder" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!-- SCROLL VIEWER -->
    <ControlTemplate x:Key="Style_ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}" d:DesignWidth="170.131" d:DesignHeight="145.514" ScrollViewer.HorizontalScrollBarVisibility="Visible" ClipToBounds="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ScrollContentPresenter
				x:Name="PART_ScrollContentPresenter"
				CanContentScroll="{TemplateBinding CanContentScroll}"
				CanHorizontallyScroll="False" CanVerticallyScroll="False"
				ContentTemplate="{TemplateBinding ContentTemplate}"
				Content="{TemplateBinding Content}"
				Margin="{TemplateBinding Padding}" Grid.RowSpan="2" Grid.ColumnSpan="2"/>

            <Border BorderBrush="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0,10" Margin="0,-5">
            <!--<Border BorderBrush="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0,10" Margin="0,-5">-->
                    <Border.Effect>
                    <BlurEffect Radius="10"/>
                </Border.Effect>
            </Border>
            <ScrollBar
				x:Name="PART_VerticalScrollBar"
				AutomationProperties.AutomationId="VerticalScrollBar"
				Cursor="Arrow" Grid.Column="1"
				Maximum="{TemplateBinding ScrollableHeight}"
				Minimum="0" Grid.Row="0"
				Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
				Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
				ViewportSize="{TemplateBinding ViewportHeight}"
                Style="{DynamicResource ScrollBar}"/>
            <ScrollBar
				x:Name="PART_HorizontalScrollBar"
                Orientation="Horizontal"
				AutomationProperties.AutomationId="HorizontalScrollBar"
				Cursor="Arrow" Grid.Column="0"
				Maximum="{TemplateBinding ScrollableWidth}"
				Minimum="0" Grid.Row="1"
				Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
				Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
				ViewportSize="{TemplateBinding ViewportWidth}"
                Style="{DynamicResource ScrollBar}"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="ScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="8" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid >
                                <Track 
				                    x:Name="PART_Track"
				                    Grid.Row="1"
				                    IsDirectionReversed="False">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Visibility="Hidden"
						                    Command="ScrollBar.PageUpCommand" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb 
                                            Style="{DynamicResource ScrollBarThumb}"
						                    Margin="1,0,1,0"/>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Visibility="Hidden"
						                    Command="ScrollBar.PageDownCommand" />
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="8"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid >
                                <Track 
				                    x:Name="PART_Track"
				                    Grid.Column="1"
				                    IsDirectionReversed="True">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton 
						                    Command="ScrollBar.PageLeftCommand" Background="{x:Null}" BorderBrush="{x:Null}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb 
                                            Style="{DynamicResource ScrollBarThumb}"
						                    Margin="0,1,0,1"/>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton 
						                    Command="ScrollBar.PageRightCommand" Background="{x:Null}" BorderBrush="{x:Null}" />
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border 
						CornerRadius="4"
						Background="#66000000" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ccon:zButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Pallete.Primary}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Pallete.PrimaryDark}"/>
        <Setter Property="Foreground" Value="{StaticResource Pallete.Icons}"/>
        <!--<Setter Property="Highlight" Value="{StaticResource Pallete.Highlight.Accent}"/>-->
        <!--<Setter Property="Disabled" Value="{StaticResource Style.Overlay.Disabled}"/>-->
        <!--<Setter Property="Pressed" Value="{StaticResource Pallete.Highlight.PrimaryDark}"/>-->
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ccon:zButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="zButtonNonStyle" TargetType="{x:Type ccon:zButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource Pallete.PrimaryText}"/>
        <!--<Setter Property="Highlight" Value="{StaticResource Pallete.Highlight.Accent}"/>-->
        <!--<Setter Property="Disabled" Value="#881F3042"/>-->
        <!--<Setter Property="Pressed" Value="{StaticResource Pallete.Highlight.PrimaryDark}"/>-->
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ccon:zButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
    <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>